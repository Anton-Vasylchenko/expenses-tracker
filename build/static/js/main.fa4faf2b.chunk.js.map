{"version":3,"sources":["components/Expenses/ExpenseDate/ExpenseDate.js","components/UI/Card/Card.js","components/Expenses/ExpenseItem/ExpenseItem.js","components/Expenses/ExpensesList/ExpensesList.js","components/Expenses/ExpensesFilter/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseError/ExpenseError.js","components/NewExpense/ExpenseForm/ExpenseForm.js","components/NewExpense/NewExpense.js","App/App.js","index.js"],"names":["ExpenseDate","date","month","toLocaleString","day","year","getFullYear","className","Card","children","classes","ExpenseItem","item","amount","title","ExpensesList","items","length","map","elem","id","ExpensesFilter","onChangeFilter","currentYear","value","onChange","e","target","ChartBar","label","maxValue","barFillHeight","Math","round","style","height","Chart","dataPoints","dataPointsValues","dataPoint","totalMaximum","max","ExpensesChart","expenses","chartDataPoints","expense","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","changedYear","ExpenseError","errorMessage","ExpenseForm","onSaveExpenseData","onCancel","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","error","setError","checkInputs","trim","clearForm","onSubmit","preventDefault","expenseData","Date","type","min","step","onClick","NewExpense","onAddExpense","isVisible","setIsVisible","showFormHandler","enteredExpenseData","random","DUMB_DATA","App","setExpenses","newExpense","prevState","rootContainer","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.fa4faf2b.chunk.js","sourcesContent":["import './ExpenseDate.scss';\r\n\r\nfunction ExpenseDate({ date }) {\r\n    const month = date.toLocaleString('en-US', { month: 'long' });\r\n    const day = date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\"> {month} </div>\r\n            <div className=\"expense-date__year\"> {year} </div>\r\n            <div className=\"expense-date__day\"> {day} </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate\r\n","import './Card.scss';\r\n\r\nfunction Card({ className, children }) {\r\n    const classes = `card ${className}`;\r\n\r\n    return (\r\n        <div className={classes}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport ExpenseDate from '../ExpenseDate/ExpenseDate';\r\nimport Card from '../../UI/Card/Card';\r\n\r\nimport './ExpenseItem.scss'\r\n\r\nfunction ExpenseItem({ item }) {\r\n    const { date, amount, title } = item\r\n\r\n    return (\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n                <ExpenseDate date={date} />\r\n                <div className=\"expense-item__description\">\r\n                    <h2> {title} </h2>\r\n                    <div className=\"expense-item__price\"> ${amount} </div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ExpenseItem\r\n","import React from 'react';\r\nimport ExpenseItem from '../ExpenseItem/ExpenseItem';\r\nimport './ExpensesList.scss';\r\n\r\nfunction ExpensesList({ items }) {\r\n\r\n    if (items.length === 0) {\r\n        return <p className=\"expenses-list__fallback \">No expenses found</p>;\r\n    }\r\n\r\n    return <ul className=\"expenses-list\">\r\n        {\r\n            items.map(elem => {\r\n                return <ExpenseItem key={elem.id} item={elem} />\r\n            })\r\n        }\r\n    </ul>\r\n}\r\n\r\nexport default ExpensesList\r\n","import React from 'react';\r\nimport './ExpensesFilter.scss'\r\n\r\nfunction ExpensesFilter({ onChangeFilter, currentYear }) {\r\n\r\n    const filterChangeHandler = (e) => {\r\n        onChangeFilter(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className='expenses-filter'>\r\n            <div className='expenses-filter__control'>\r\n                <label>Filter by year</label>\r\n                <select value={currentYear} onChange={filterChangeHandler}>\r\n                    <option value='2022'>2022</option>\r\n                    <option value='2021'>2021</option>\r\n                    <option value='2020'>2020</option>\r\n                    <option value='2019'>2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpensesFilter\r\n","import React from 'react';\r\nimport './ChartBar.scss';\r\n\r\nfunction ChartBar({ id, label, value, maxValue }) {\r\n    let barFillHeight = '0%';\r\n\r\n    if (maxValue > 0) {\r\n        barFillHeight = Math.round((value / maxValue) * 100) + '%'\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{ height: barFillHeight }}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">\r\n                {label}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBar\r\n","import React from 'react';\r\nimport ChartBar from './ChartBar';\r\n\r\nimport './Chart.scss';\r\n\r\nfunction Chart({ dataPoints }) {\r\n    const dataPointsValues = dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointsValues)\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            {\r\n                dataPoints.map(dataPoint =>\r\n                (\r\n                    <ChartBar\r\n                        key={dataPoint.label}\r\n                        value={dataPoint.value}\r\n                        maxValue={totalMaximum}\r\n                        label={dataPoint.label}\r\n                    />)\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React from 'react';\r\nimport Chart from '../../Chart/Chart';\r\nimport './ExpensesChart.scss';\r\n\r\nfunction ExpensesChart({ expenses }) {\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 }\r\n    ]\r\n\r\n    for (const expense of expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />\r\n}\r\n\r\nexport default ExpensesChart\r\n","import React, { useState } from 'react';\r\nimport ExpensesList from './ExpensesList/ExpensesList';\r\nimport ExpensesFilter from './ExpensesFilter/ExpensesFilter';\r\nimport ExpensesChart from './ExpensesChart/ExpensesChart';\r\nimport Card from '../UI/Card/Card';\r\n\r\nimport './Expenses.scss';\r\n\r\nfunction Expenses({ items }) {\r\n    const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n    const filterChangeHandler = (changedYear) => {\r\n        setFilteredYear(changedYear);\r\n    }\r\n\r\n    const filteredExpenses = items.filter(item => {\r\n        return item.date.getFullYear().toString() === filteredYear;\r\n    })\r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpensesFilter currentYear={filteredYear} onChangeFilter={filterChangeHandler} />\r\n            <ExpensesChart expenses={filteredExpenses} />\r\n            <ExpensesList items={filteredExpenses} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Expenses\r\n","import React from 'react'\r\nimport Cart from '../../UI/Card/Card'\r\n\r\nimport './ExpenseError.scss'\r\n\r\nfunction ExpenseError({ errorMessage }) {\r\n    return (\r\n        <Cart className=\"expense-error\">\r\n            {errorMessage}\r\n        </Cart>\r\n    )\r\n}\r\n\r\nexport default ExpenseError\r\n","import React, { useState } from 'react';\r\nimport ExpenseError from '../ExpenseError/ExpenseError';\r\n\r\nimport './ExpenseForm.scss';\r\n\r\nfunction ExpenseForm({ onSaveExpenseData, onCancel }) {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n    const [error, setError] = useState(false)\r\n\r\n    const titleChangeHandler = (e) => {\r\n        setEnteredTitle(e.target.value)\r\n    };\r\n\r\n    const amountChangeHandler = (e) => {\r\n        setEnteredAmount(e.target.value)\r\n    };\r\n\r\n    const dateChangeHandler = (e) => {\r\n        setEnteredDate(e.target.value)\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const isInputsCorrect = checkInputs();\r\n\r\n        if (!isInputsCorrect) {\r\n            return;\r\n        }\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        }\r\n\r\n        onSaveExpenseData(expenseData);\r\n        clearForm();\r\n        onCancel();\r\n    };\r\n\r\n    const checkInputs = () => {\r\n        if (enteredTitle.trim().length === 0) {\r\n            setError(true)\r\n            return false;\r\n        }\r\n\r\n        if (enteredAmount.length === 0) {\r\n            setError(true)\r\n            return false;\r\n        }\r\n\r\n        if (enteredDate.length === 0) {\r\n            setError(true)\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    }\r\n\r\n    const cancelFormHandler = () => {\r\n        onCancel();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {error && <ExpenseError errorMessage={'Error! Fields can\\'t be empty'} />}\r\n            <form onSubmit={submitHandler} >\r\n                <div className=\"new-expense__controls\">\r\n                    <div className=\"new-expense__control\">\r\n                        <label>Title</label>\r\n                        <input type=\"text\"\r\n                            value={enteredTitle}\r\n                            onChange={titleChangeHandler}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"new-expense__control\">\r\n                        <label>Amount</label>\r\n                        <input type=\"number\"\r\n                            value={enteredAmount}\r\n                            min=\"0.01\"\r\n                            step=\"0.01\"\r\n                            onChange={amountChangeHandler}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"new-expense__control\">\r\n                        <label>Date</label>\r\n                        <input type=\"date\"\r\n                            value={enteredDate}\r\n                            min=\"2019-01-01\"\r\n                            max=\"2023-12-31\"\r\n                            onChange={dateChangeHandler}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"new-expense__actions\">\r\n                    <button type=\"button\" onClick={cancelFormHandler}>Cancel</button>\r\n                    <button type=\"submit\">Add Expense</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm\r\n","import React, { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm/ExpenseForm';\r\n\r\nimport './NewExpense.scss';\r\n\r\nfunction NewExpense({ onAddExpense }) {\r\n    const [isVisible, setIsVisible] = useState(false)\r\n\r\n    const onSaveExpenseData = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n\r\n        onAddExpense(expenseData)\r\n    }\r\n\r\n    const showFormHandler = () => {\r\n        setIsVisible(!isVisible);\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!isVisible && <button onClick={showFormHandler}> New Expense </button>}\r\n            {isVisible && <ExpenseForm onSaveExpenseData={onSaveExpenseData} onCancel={showFormHandler} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewExpense\r\n","import React, { useState } from \"react\";\nimport Expenses from \"../components/Expenses/Expenses\";\nimport NewExpense from \"../components/NewExpense/NewExpense\";\nimport './App.css';\n\nconst DUMB_DATA = [\n  { id: 'e1', title: 'Car Insurance', amount: 150, date: new Date(2019, 2, 28) },\n  { id: 'e2', title: 'New game', amount: 50, date: new Date(2019, 5, 18) },\n  { id: 'e3', title: 'New phone', amount: 300, date: new Date(2019, 3, 8) },\n  { id: 'e4', title: 'TV', amount: 700, date: new Date(2020, 3, 12) },\n  { id: 'e5', title: 'Computer', amount: 600, date: new Date(2020, 6, 4) },\n  { id: 'e6', title: 'Headphones', amount: 205, date: new Date(2020, 6, 18) },\n  { id: 'e7', title: 'Guitar', amount: 300, date: new Date(2021, 1, 3) },\n  { id: 'e8', title: 'HDD', amount: 180, date: new Date(2021, 1, 6) },\n  { id: 'e9', title: 'Monitor', amount: 194.30, date: new Date(2021, 1, 7) },\n  { id: 'e10', title: 'Table', amount: 394.6, date: new Date(2021, 3, 6) },\n  { id: 'e11', title: 'RAM', amount: 94.4, date: new Date(2021, 3, 18) }\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMB_DATA)\n\n  const addExpenseHandler = (newExpense) => {\n    setExpenses((prevState) => {\n      return [\n        ...prevState,\n        newExpense\n      ]\n    })\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App/App';\n\nconst rootContainer = document.getElementById('root');\n\nReactDOM.render(<App />, rootContainer);\n"],"sourceRoot":""}